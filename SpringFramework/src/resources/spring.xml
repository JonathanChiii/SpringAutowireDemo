<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns = "http://www.springframework.org/schema/beans"
   xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context = "http://www.springframework.org/schema/context"
   xsi:schemaLocation = "http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd">
   
   <context:annotation-config></context:annotation-config>

	<!-- Setter Dependency Injection. Pass the value of the class property through a container. Move ??? from compile time to run time. -->
	<bean id = "t" class="business.Student">
	<!-- in Setter Injection, you don't have to have all the properties -->
		<property name="name" value="Arby's"/>
		<property name="email" value="arbys@foodie.com"/>
		<property name="age" value="26"/>		
	</bean>
	
	<bean id = "t1" class="business.Student"/>
	<!-- If you don't provide constructor, this will look for default constructor -->
	
	<bean id = "obj" class="business.Student">
	<!-- In Constructor Injection, you have to include properties according to the constructor provided by the class -->
	 	<constructor-arg value="Arby's"/>
	 	<constructor-arg value="28"/>
	 	<constructor-arg value="arbys@foodie.com"/>
	</bean>
	
	<bean id = "account1" class="business.Account">
	<property name="accNum" value="800"/>
	<property name="accType" value="current"/>
	<property name="accBranchName" value="USA"/>
	</bean>
	
	<!-- Autowire byName 
	<bean id = "account" class="business.Account">
	<property name="accNum" value="900"/>
	<property name="accType" value="current"/>
	<property name="accBranchName" value="USA"/>
	</bean>
	-->
	
	<bean id = "employee" class="business.Employee">
	<property name="id" value="100"/>
	<property name="name" value="Arby's"/>
	<property name="email" value="arbys@foodie.com"/>
	
	<!-- delete this line after adding autowire attribute
		<property name="account"><ref bean="account1"/></property>
	 -->
	</bean>
	
	
</beans>